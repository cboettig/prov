% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prov.R
\name{write_prov}
\alias{write_prov}
\title{Write a provenance trace into JSON-LD}
\usage{
write_prov(
  data_in = NULL,
  code = NULL,
  data_out = NULL,
  meta = NULL,
  creator = NULL,
  title = NULL,
  description = NULL,
  issued = as.character(Sys.Date()),
  license = "https://creativecommons.org/publicdomain/zero/1.0/legalcode",
  provdb = "prov.json",
  append = TRUE,
  schema = c("http://www.w3.org/ns/dcat", "http://schema.org"),
  ...
)
}
\arguments{
\item{data_in}{path or URI for input data}

\item{code}{path or URI for code}

\item{data_out}{path or URI to output data}

\item{meta}{path or URI to metadata describing the workflow}

\item{creator}{URI, list node, or text for creator}

\item{title}{Dataset title, character string}

\item{description}{Dataset description, character string}

\item{issued}{publication date, as Date or character object}

\item{license}{URL to a copyright license}

\item{provdb}{path to output JSON file, default "prov.json"}

\item{append}{Should we append to existing json or overwrite it?}

\item{schema}{Use schema.org or DCAT2 schema? See details.}

\item{...}{additional named elements passed to Dataset}
}
\description{
Write a provenance trace into JSON-LD
}
\details{
If creator, title, and description are all empty, will serialize
only a graph of distribution (data download) elements, not a
Dataset.

Additional elements passed through \code{...} must be explicitly namespaced,
e.g. \code{dcat:version}, when using DCAT2 schema. When using schema.org,
elements must be in schema.org namespace.

Provenance can be expressed in (purely) schema.org or as DCAT2
(includes terms from DCTERMS, PROV, DCAT2, CITO ontologies).
The latter is more expressive in terms of provenance.
Also note DCAT but not schema can explicitly encode compression and
metadata file relationships.
}
\examples{
 
## Use temp files for illustration only
provdb <- tempfile(fileext = ".json")
input_data <- tempfile(fileext = ".csv")
output_data <- tempfile(fileext = ".csv")
code <- tempfile(fileext = ".R")

## A minimal workflow: 
write.csv(mtcars, input_data)
out <- lm(mpg ~ disp, data = mtcars)
write.csv(out$coefficients, output_data)

# really this would already exist...
writeLines("out <- lm(mpg ~ disp, data = mtcars)", code)

## And here we go: 
write_prov(input_data, code, output_data, provdb = provdb,  
           append= FALSE)
 
## Include a title to group these into a Dataset:
write_prov(input_data, code, output_data, provdb = provdb,
           title = "example dataset with provenance",  append= FALSE)
           
}
